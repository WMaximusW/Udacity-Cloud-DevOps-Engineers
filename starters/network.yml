Description: CD12352 - Infrastructure as Code Project - Network - TrungNQ72

Parameters:
  # EnvironmentName: TrungNQ72
  EnvironmentName:
    Description: TrungNQ72-Network-Project02
    Type: String

  # VpcCIDR
  VpcCIDR:
    Description: TrungNQ72-Network-VPC
    Type: String
    Default: 10.0.0.0/16

  PublicSubnet1CIDR:
    Description: TrungNQ72-Network-PublicSubnet1CIDR
    Type: String
    Default: 10.0.0.0/24

  PublicSubnet2CIDR:
    Description: TrungNQ72-Network-PublicSubnet2CIDR
    Type: String
    Default: 10.0.1.0/24

  PrivateSubnet1CIDR:
    Description: TrungNQ72-Network-PrivateSubnet1CIDR
    Type: String
    Default: 10.0.2.0/24

  PrivateSubnet2CIDR:
    Description: TrungNQ72-Network-PrivateSubnet2CIDR
    Type: String
    Default: 10.0.3.0/24

Resources:
  # VPC: #1
  # EnableDnsHostnames = true
  # Ref: VpcCIDR (Parameters)
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName

  # InternetGateway: #2
  # Ref: EnvironmentName (Parameters)
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Ref EnvironmentName
  
  # InternetGatewayAttachment: #2.1
  # Ref: VPC (#1)
  # Ref: InternetGateway (#2)
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  # PublicSubnet1: #3.1
  # MapPublicIpOnLaunch = true
  # Ref: VPC (#1)
  # Ref: PublicSubnet1CIDR (Parameters)
  # Ref: EnvironmentName (Parameters)
  PublicSubnet1: 
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName} Public Subnet (AZ1)

  # PrivateSubnet1: #3.2
  # MapPublicIpOnLaunch = false
  # Ref: VPC (#1)
  # Ref: PrivateSubnet1CIDR (Parameters)
  # Ref: EnvironmentName (Parameters)
  PrivateSubnet1: 
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs '' ]
      CidrBlock: !Ref PrivateSubnet1CIDR
      MapPublicIpOnLaunch: false
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName} Private Subnet (AZ1)

  # PublicSubnet2: #4.1
  # MapPublicIpOnLaunch = true
  # Ref: VPC (#1)
  # Ref: PublicSubnet2CIDR (Parameters)
  # Ref: EnvironmentName (Parameters)
  PublicSubnet2: 
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PublicSubnet2CIDR
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName} Public Subnet (AZ2)

  # PrivateSubnet1: #4.2
  # MapPublicIpOnLaunch = false
  # Ref: VPC (#1)
  # Ref: PrivateSubnet2CIDR (Parameters)
  # Ref: EnvironmentName (Parameters)
  PrivateSubnet2: 
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs '' ]
      CidrBlock: !Ref PrivateSubnet2CIDR
      MapPublicIpOnLaunch: false
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName} Private Subnet (AZ2)